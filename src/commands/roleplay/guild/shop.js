exports.run = async (update, args) => {
  const rel = '../../../'
  const format = require(rel + 'utils/format')
  const User = require(rel + 'lib/User')
  const Guild = require(rel + 'lib/Guild')
  const CommandError = require(rel + 'lib/CommandError')
  const { CURRENCY } = require(rel + 'configs/constants')
  const shopData = require(rel + 'data/guildShop')

  const { senderId } = update
  const user = new User(senderId)
  const guildId = user.guild

  // Return if guild is empty
  if (!guildId) {
    return update.reply(
      'üòï –¢—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –∫–æ–ª—Ö–æ–∑–µ\n\n' +
        '–ì–ª–∞–≤–∞ –∫–æ–ª—Ö–æ–∑–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Ç–µ–±—è –∫–æ–º–∞–Ω–¥–æ–π /–∫–æ–ª—Ö–æ–∑ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å [id]'
    )
  }

  // Get info
  const guild = new Guild(guildId)

  if (!guild.exists()) {
    throw new CommandError(
      `–ö–æ–ª—Ö–æ–∑ —Å ID "${guildId}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`,
      'Guild_NotFound'
    )
  }

  const name = guild.name
  const money = guild.money

  if (!args[1]) return await showMenu()
  else return await buy(args[1])

  async function showMenu() {
    let res = ['üìÉ ' + (await user.getName().first_name) + ', –º–∞–≥–∞–∑–∏–Ω:']

    for (const item of shopData) {
      res.push(`[ ${item.id} ] ${item.icon} ${item.name}`)
      res.push(
        `   - ${format(item.price)} ${CURRENCY} ${
          item.group !== 'shield'
            ? `| üí† ${item.rep} R | ‚¨ÜÔ∏è ${item.boost} S`
            : ' - 24h'
        }`
      )
    }

    res.push()
    res.push('–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —á—Ç–æ-–ª–∏–±–æ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞, –Ω–∞–ø–∏—à–∏—Ç–µ [ ID] –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:')
    res.push('@tihon_bot, –∫–æ–ª—Ö–æ–∑ –º–∞–≥–∞–∑–∏–Ω 1 15')

    return await update.reply(res.join('\n'))
  }

  async function buy(id) {
    id = parseInt(id)

    const item = shopData.find(e => e.id === id)

    if (!item) {
      throw new CommandError(
        '–ü—Ä–µ–¥–º–µ—Ç —Å ID ' + id + ' –Ω–µ –Ω–∞–π–¥–µ–Ω',
        'Item_NotFound'
      )
    }

    let quantity = parseInt(args[2]) || 1

    if (isNaN(quantity) || quantity <= 0) {
      throw new CommandError('–í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (>0)', 'Argument_NotNumber')
    }

    const population = guild.population[item.group]

    if (item.group !== 'shield' && quantity > 100 - population) {
      quantity = 100 - population
    }

    const price = item.price * quantity
    const rep = item.rep * quantity

    if (money - price < 0) {
      return update.reply(
        'üßÆ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ - —É –∫–æ–ª—Ö–æ–∑–∞ ' +
          +format(money) +
          ' ‚ÇÆ, –∞ –Ω—É–∂–Ω–æ ' +
          format(price) +
          ' ‚ÇÆ'
      )
    }

    if (item.group === 'shield') {
      if (guild.shield) {
        return update.reply('üîª –£ –∫–æ–ª—Ö–æ–∑–∞ —É–∂–µ –µ—Å—Ç—å —â–∏—Ç')
      } else {
        guild.setShield(Date.now() + 24 * 3600 * 1000 * quantity)
      }
    } else {
      if (guild.population[item.group] >= 100) {
        return update.reply(
          'üîª –í –∫–æ–ª—Ö–æ–∑–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞–∫—Å–∏–º—É–º 100 ' + item.accName.toLowerCase()
        )
      } else {
        guild.addPopulation(item.group, quantity)
      }
    }

    guild.subtractMoney(price)
    guild.addReputation(rep)

    return await update.reply(
      `‚ú® –ö–æ–ª—Ö–æ–∑ –ø—Ä–∏–æ–±—Ä—ë–ª x${quantity} ${item.name} –∑–∞ ${format(
        price
      )} ${CURRENCY}`
    )
  }
}

exports.command = {
  hidden: true,
}
