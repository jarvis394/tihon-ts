import User from '../../models/User'
import { CURRENCY } from '../../config/constants'
import ICommand from 'src/interfaces/Command'

exports.run = async ({ update, args }) => {
  const user = new User(update.senderId)
  const { state, amount } = user.isEnoughFor(1000)
  if (!state)
    return update.reply(
      `üßÆ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥: —É —Ç–µ–±—è ${amount} ${CURRENCY}, –∞ –Ω—É–∂–Ω–æ 1000 ${CURRENCY}`
    )

  let commandName: string = args[0]
  const list: ICommand['info'] = require('./list').command
  const who: ICommand['info'] = require('./who').command

  // Return if no arguments
  if (!commandName) {
    throw new Error('–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É')
  } 
  // Find 'list' command in aliases
  else if (commandName === 'list' || list.alias.some(e => e === commandName)) {
    commandName = 'list'
  } 
  // Find 'who' command in aliases
  else if (commandName === 'who' || who.alias.some(e => e === commandName)) {
    commandName = 'who'
  } 
  // Return error if no command was found
  else {
    throw new Error('‚úñÔ∏è –ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã!')
  }

  // Subtract money for using mention mode 
  user.subtract(1000)

  // Run commmand
  require('./' + commandName).run({
    update,
    args,
    mentionCmdState: true,
  })
}

exports.command = {
  arguments: '(arg)|(–ø—Ä–µ–¥–ª.)',
  description: {
    en: 'Who is ***?',
    ru: '–ö—Ç–æ ***?',
  },
  alias: ['—É–ø–æ–º—è–Ω—É—Ç—å', '—É–ø–æ–º—è–Ω–∏'],
  group: 'utils',
}
