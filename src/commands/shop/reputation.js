exports.run = async ({ update, args }) => {
  const User = require('../../lib/models/User')

  const format = require('../../utils/format')
  const { USERS } = require('../../configs/blacklist')

  let id
  try {
    id = parseInt(args[0].split('|')[0].slice(3))
    if (isNaN(id)) throw new Error('argument is NaN')
  } catch (e) {
    id = update.senderId
  }

  if (id < 0) {
    return update.reply('üîª –ù–µ–ª—å–∑—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≥—Ä—É–ø–ø—ã')
  }

  if (USERS.some(e => e === id.toString()))
    return update.reply('üò† –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')

  const user = new User(id)

  return update.reply(
    (id === update.senderId
      ? '–¢–≤–æ—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è:‚†Ä‚†Ä\n'
      : '–†–µ–ø—É—Ç–∞—Ü–∏—è ' + (await user.getFullName('acc')) + ': \n') +
      'üí† ' +
      format(user.reputation) +
      ' R'
  )
}

exports.command = {
  name: 'reputation',
  arguments: false,
  description: {
    en: 'Shows reputation of user',
    ru: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
  },
  alias: ['rep', '—Ä–µ–ø', '—Ä–µ–ø—É—Ç–∞—Ü–∏—è'],
  group: 'shop',
}
