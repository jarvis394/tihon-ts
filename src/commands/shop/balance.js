exports.run = async ({ update, args }) => {
  const User = require('../../lib/models/User')

  const format = require('../../utils/format')
  const { USERS } = require('../../configs/blacklist')
  const { CURRENCY } = require('../../configs/constants')

  let id
  try {
    id = parseInt(args[0].split('|')[0].slice(3))
    if (isNaN(id)) throw new Error('argument is NaN')
  } catch (e) {
    id = update.senderId
  }

  if (id < 0) {
    return update.reply('üîª –ù–µ–ª—å–∑—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –≥—Ä—É–ø–ø—ã')
  }

  if (USERS.some(e => e === id.toString()))
    return update.reply('üò† –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')

  const user = new User(id)

  return (
    (id === update.senderId
      ? '–¢–≤–æ–π –±–∞–ª–∞–Ω—Å:‚†Ä‚†Ä\n'
      : '–ë–∞–ª–∞–Ω—Å ' + (await user.getFullName('acc')) + ': \n') +
    'üè¶ ' +
    format(user.money) +
    ' ' +
    CURRENCY
  )
}

exports.command = {
  name: 'balance',
  arguments: false,
  description: {
    en: 'Shows balance of user',
    ru: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
  },
  alias: ['–±–∞–ª–∞–Ω—Å'],
  group: 'shop',
}
