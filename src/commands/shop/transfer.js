exports.run = async ({ update, args }) => {
  const User = require('../../lib/models/User')
  const { USERS: BLACKLIST } = require('../../configs/blacklist')
  const { CURRENCY } = require('../../configs/constants')

  let receiverId, amount
  const { senderId } = update

  try {
    receiverId = parseInt(args[0].split('|')[0].slice(3))

    if (isNaN(receiverId)) throw new Error('argument \'receiverId\' is NaN')
  } catch (e) {
    return update.reply(
      '‚úñÔ∏è –ù–µ —É–ø–æ–º—è–Ω—É—Ç —á–µ–ª–æ–≤–µ–∫, –∫–æ–º—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–∏—Ö–æ–∏–Ω—ã\n\n–ü—Ä–∏–º–µ—Ä: @tihon_bot –ø–µ—Ä–µ–¥–∞—Ç—å *id 1000'
    )
  }

  if (receiverId === senderId) {
    return update.reply('üîª –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ')
  }

  if (receiverId < 0) {
    return update.reply('üîª –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –≥—Ä—É–ø–ø–µ')
  }

  if (BLACKLIST.some(e => e === receiverId.toString()))
    return update.reply('üò† –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω')

  try {
    amount = parseInt(args[1])

    if (isNaN(amount)) throw new Error('argument \'amount\' is NaN')
  } catch (e) {
    return update.reply('‚úñÔ∏è –ù–µ—Ç —Å—É–º–º—ã\n\n–ü—Ä–∏–º–µ—Ä: @tihon_bot –ø–µ—Ä–µ–¥–∞—Ç—å *id 1000')
  }

  if (amount <= 0) return update.reply('ü§ó –¢–∞–∫ –Ω–µ–ª—å–∑—è')
  const amt = Math.ceil(amount * 0.98)

  const user = new User(update.senderId)
  const receiver = new User(receiverId)
  const s = await user.isEnoughFor(amount)

  if (!s.state) {
    return update.reply(
      '‚úñÔ∏è –£ —Ç–µ–±—è –Ω–µ—Ç —Ç–∞–∫–æ–π —Å—É–º–º—ã! –¢–µ–±–µ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫–æ–ø–∏—Ç—å –≤—Å–µ–≥–æ ' +
        (amount - s.amount) +
        CURRENCY
    )
  }

  receiver.add(amt)
  user.subtract(amount)

  return update.reply(
    'üéâ –ü–µ—Ä–µ–¥–∞–Ω–æ ' +
      amt +
      ' ' +
      CURRENCY +
      ' (2% –∫–æ–º–∏—Å—Å–∏–∏) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' +
      receiverId
  )
}

exports.command = {
  arguments: '(id) (amt)|(id) (amt)',
  description: {
    en: 'Transfer money to a user',
    ru: '–ü–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
  },
  alias: ['–ø–µ—Ä–µ–≤–æ–¥', '–ø–µ—Ä–µ–¥–∞—Ç—å'],
}
