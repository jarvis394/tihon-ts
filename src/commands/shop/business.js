exports.run = async ({ update, args }) => {
  const moment = require('moment')
  const User = require('../../lib/models/User')
  const shopUtils = require('../../utils/shop')
  const format = require('../../utils/format')
  const { CURRENCY } = require('../../configs/constants')

  const HOUR = 3600000
  const WAITING_TIME = HOUR * 12
  const now = Date.now()
  const user = new User(update.senderId)
  const items = user.items
  const business = items.companies

  if (!business) {
    return update.reply(
      'üòØ –£ —Ç–µ–±—è –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞! –ü—Ä–∏–æ–±—Ä–µ—Ç–∏ –µ–≥–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: \n\n@tihon_bot, –º–∞–≥–∞–∑–∏–Ω 5'
    )
  }

  const checkoutAliases = ['—Å–Ω—è—Ç—å', '–≤—ã–≤–æ–¥', '–≤—ã–≤–µ—Å—Ç–∏']
  const item = shopUtils.getItemById(business.id)
  let firstTimeFlag = false
  let res = []
  let all = 0
  let lastTime = user.earnings.business

  moment.locale('ru')

  if (!args[0]) {
    return await sendMainMenu()
  } else if (checkoutAliases.some(e => e === args[0])) {
    return await checkout()
  }

  async function sendMainMenu() {
    return await update.reply(
      `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–∏–∑–Ω–µ—Å—É "${item.name}":\n` +
        `üí∏ –ü—Ä–∏–±—ã–ª—å: ${item.earning} ${CURRENCY}\n` +
        `üí∞ –ù–∞ —Å—á–µ—Ç—É: ${Math.floor(
          (now - (lastTime ? lastTime : now - WAITING_TIME)) / WAITING_TIME
        ) * item.earning} ${CURRENCY}`
    )
  }

  async function checkout() {
    // If no data found
    if (!lastTime) {
      lastTime = now - WAITING_TIME
      firstTimeFlag = true
    }

    if (now - lastTime >= WAITING_TIME || firstTimeFlag) {
      const earning = Math.floor((now - lastTime) / WAITING_TIME) * item.earning

      // Return if nothing to add
      if (earning === 0) {
        return await update.reply('üòØ –£ –±–∏–∑–Ω–µ—Å–∞ –Ω–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤—ã–≤–æ–¥!')
      }

      res.push(
        `${item.icon} ${item.name} - ${format(item.earning)} ${CURRENCY}/12h\n`
      )
      res.push('üí∏ –° –±–∏–∑–Ω–µ—Å–∞ —Å–Ω—è—Ç–æ ' + format(earning) + ' ' + CURRENCY)

      user.add(earning)
      user.setEarning('business', now)
      user.addReputation(Math.floor(earning / 500))

      return update.reply(res.join('\n'))
    } else {
      const left = new Date(WAITING_TIME + lastTime)

      return update.reply(
        'üòï –¢—ã —É–∂–µ —Å–Ω–∏–º–∞–ª –¥–µ–Ω—å–≥–∏ —Å –±–∏–∑–Ω–µ—Å–∞!\n' +
          `–ö–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ ${moment(left).fromNow()}`
      )
    }
  }
}

exports.command = {
  arguments: false,
  description: {
    en: 'Manage and collect money from your company!',
    ru: '–£–ø—Ä–∞–≤–ª—è–π –∏ —Å–æ–±–∏—Ä–∞–π –±–∞–±–ª–æ —Å–æ —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏!',
  },
  alias: ['–±–∏–∑–Ω–µ—Å', 'companies', '–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ'],
}
